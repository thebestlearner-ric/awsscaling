---
# deploy.yml for kubernetes deployment configuration
- name: Debian | Configure K8S Master Block
  block:
  - name: Debian | Initialise the Kubernetes cluster using kubeadm
    become: true
    command: kubeadm init --pod-network-cidr={{ k8s_pod_network }} --ignore-preflight-errors=all
    args:
      creates: "{{ k8s_admin_config }}"

  - name: Debian | Setup kubeconfig for {{ k8s_user }} user
    file:
      path: "{{ k8s_user_home }}/.kube"
      state: directory
      owner: "{{ k8s_user }}"
      group: "{{ k8s_user }}"
      mode: "0750"
  
  - name: Debian | Copy {{ k8s_admin_config }}
    become: true
    copy:
      src: "{{ k8s_admin_config }}"
      dest: "{{ k8s_user_home }}/.kube/config"
      owner: "{{ k8s_user }}"
      group: "{{ k8s_user }}"
      mode: "0640"
      remote_src: yes
  
  - name: Debian | Download {{ calico_rbac_url }}
    get_url:
      url: "{{ calico_rbac_url }}"
      dest: "{{ k8s_user_home }}/{{ calico_rbac_config }}"
      owner: "{{ k8s_user }}"
      group: "{{ k8s_user }}"
      mode: "0640"
  
  - name: Debian | Download {{ calico_net_url }}
    get_url:
      url: "{{ calico_net_url }}"
      dest: "{{ k8s_user_home }}/{{ calico_net_config }}"
      owner: "{{ k8s_user }}"
      group: "{{ k8s_user }}"
      mode: "0640"     

  - name: Debian | Set CALICO_IPV4POOL_CIDR to {{ k8s_pod_network }}
    replace:
      path: "{{ k8s_user_home }}/{{ calico_net_config }}"
      regexp: "192.168.0.0/16"
      replace: "{{ k8s_pod_network }}"
  
  - name: Debian | Download {{ dashboard_url }}
    get_url:
      url: "{{ dashboard_url }}"
      dest: "{{ k8s_user_home }}/{{ dashboard_config }}"
      owner: "{{ k8s_user }}"
      group: "{{ k8s_user }}"
      mode: "0640"     
  
  # - name: Debian | Install calico pod network {{ calico_rbac_config }}
  #   become: false
  #   command: kubectl apply -f "{{ k8s_user_home }}/{{ calico_rbac_config }}"
  
  # - name: Debian | Install calico pod network {{ calico_net_config }}
  #   become: false
  #   command: kubectl apply -f "{{ k8s_user_home }}/{{ calico_net_config }}"
  
  - name: Debian | Install K8S dashboard {{ dashboard_config }}
    become: false
    command: kubectl apply -f "{{ k8s_user_home }}/{{ dashboard_config }}"
  
  - name: Debian | Create service account
    become: false
    command: kubectl create serviceaccount dashboard -n default
    ignore_errors: true
  
  - name: Debian | Create cluster role binding dashboard-admin
    become: false
    command: kubectl create clusterrolebinding dashboard-admin -n default --clusterrole=cluster-admin --serviceaccount=default:dashboard
    ignore_errors: true
  
  - name: Debian | Create {{ k8s_dashboard_adminuser_config }} for service account
    copy:
      src: "files/{{ k8s_dashboard_adminuser_config }}"
      dest: "{{ k8s_user_home }}/{{ k8s_dashboard_adminuser_config }}"
      owner: "{{ k8s_user }}"
      group: "{{ k8s_user }}"
      mode: "0640"
  
  - name: Debian | Create service account
    become: false
    command: kubectl apply -f "{{ k8s_user_home }}/{{ k8s_dashboard_adminuser_config }}"
    ignore_errors: true
  
  - name: Debian | Create cluster role binding cluster-system-anonymous
    become: false
    command: kubectl create clusterrolebinding cluster-system-anonymous --clusterrole=cluster-admin --user=system:anonymous
    ignore_errors: true
  
  - name: Debian | Test K8S dashboard and wait for HTTP 200
    uri:
      url: "{{ k8s_dashboard_url }}"
      status_code: 200
      validate_certs: no
    ignore_errors: true
    register: result_k8s_dashboard_page
    retries: 10
    delay: 6
    until: result_k8s_dashboard_page is succeeded

  - name: Debian | K8S dashboard URL
    debug:
      var: k8s_dashboard_url
  
  - name: Debian | Generate join command
    command: kubeadm token create --print-join-command
    register: join_command
  
  - name: Debian | Copy join command to local file
    become: false
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="{{ k8s_token_file }}"
  when: "'control' in group_names"

- name: Debian | Configure K8S Node Block
  block:
  - name: Debian | Copy {{ k8s_token_file }} to server location
    copy: 
      src: "{{ k8s_token_file }}"
      dest: "{{ k8s_user_home }}/{{ k8s_token_file }}.sh"
      owner: "{{ k8s_user }}"
      group: "{{ k8s_user }}"
      mode: "0750"

  - name: Debian | Join the node to cluster unless file {{ k8s_kubelet_config }} exists
    become: true
    command: sh "{{ k8s_user_home }}/{{ k8s_token_file }}.sh"
    args:
      creates: "{{ k8s_kubelet_config }}"
  when: "'worker' in group_names"
...